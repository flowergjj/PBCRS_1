package com.hkbank.pbcrs.mapper;

import com.hkbank.pbcrs.model.ErrorInfo;
import com.hkbank.pbcrs.model.PbcrsReportSendfile;
import org.springframework.stereotype.Repository;

import java.util.List;
import java.util.Map;

@Repository
public interface PbcrsReportSendfileMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PBCRS_REPORT_SENDFILE
     *
     * @mbggenerated Wed Apr 17 14:38:02 CST 2019
     */
    int deleteByPrimaryKey(Short seqno);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PBCRS_REPORT_SENDFILE
     *
     * @mbggenerated Wed Apr 17 14:38:02 CST 2019
     */
    int insert(PbcrsReportSendfile record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PBCRS_REPORT_SENDFILE
     *
     * @mbggenerated Wed Apr 17 14:38:02 CST 2019
     */
    PbcrsReportSendfile selectByPrimaryKey(Short seqno);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PBCRS_REPORT_SENDFILE
     *
     * @mbggenerated Wed Apr 17 14:38:02 CST 2019
     */
    List<PbcrsReportSendfile> selectAll();
    
    int getSeqnoByNameDate(Map<String,String> params);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PBCRS_REPORT_SENDFILE
     *
     * @mbggenerated Wed Apr 17 14:38:02 CST 2019
     */
    int updateByPrimaryKey(PbcrsReportSendfile record);
    int update(PbcrsReportSendfile record);
    
    int getKey();
	List<Map<String, Object>> selectListPage(Map<String, Object> params);

	int selectListCount(Map<String, Object> params);
	
	/*----------------------------------------银联查询sql语句------------------------------------------------*/
	List<Map<String, Object>> selectYLListPage(Map<String, Object> params);

	int selectYLListCount(Map<String, Object> params);

	int deleteYL(Map<String, String> params);

	int insertYL(Map<String, Object> params);
	
	/**
	 * 查询文件记录表中的内容，得到文件中每一行记录的数据信息
	 * @param params
	 * @return
	 */
	List<Map<String, Object>> selectSendFileRel(Map<String, Object> params);
	
	/**
	 * 得到文件记录表中的查询出的行数
	 * @param params
	 * @return
	 */
	int selectSendFileRelCount(Map<String, Object> params);

	/**
	 * 查询错误详细数据
	 * @param params
	 * @return
	 */
	List<Map<String, Object>> queryErrorInfo(Map<String, Object> params);

	int queryErrorInfoCount(Map<String, Object> params);

	/**
	 * 添加过滤列表
	 * @param errorInfo
	 * @return
	 */
	int addFilter( ErrorInfo errorInfo);

	/**
	 * 移除过滤列表
	 * @param errorInfo
	 * @return
	 */
	int removeFilter(ErrorInfo errorInfo);

	/**
	 * 查询数据库过滤表中是否已有该过滤信息
	 * @param errorInfo
	 * @return
	 */
	int selectFilterCount(ErrorInfo errorInfo);

	int updateFilterFlag(Map<String,String> params);

	int delete(ErrorInfo errorInfo);

	int updateIsUpload(String encName);
}